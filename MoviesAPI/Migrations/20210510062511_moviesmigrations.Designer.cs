// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoviesAPI.Services;

namespace MoviesAPI.Migrations
{
    [DbContext(typeof(MovieDb))]
    [Migration("20210510062511_moviesmigrations")]
    partial class moviesmigrations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MoviesAPI.Model.Movies", b =>
                {
                    b.Property<Guid>("MoviesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Rating")
                        .HasColumnType("real");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MoviesId");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("MoviesAPI.Model.Rentals", b =>
                {
                    b.Property<Guid>("RentalsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("OnRent")
                        .HasColumnType("bit");

                    b.HasKey("RentalsId");

                    b.ToTable("Rentals");
                });

            modelBuilder.Entity("MoviesAPI.Model.Rentals", b =>
                {
                    b.HasOne("MoviesAPI.Model.Movies", "Movies")
                        .WithMany()
                        .HasForeignKey("RentalsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movies");
                });
#pragma warning restore 612, 618
        }
    }
}
